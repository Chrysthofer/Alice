State 76 conflicts: 8 shift/reduce
State 77 conflicts: 8 shift/reduce
State 78 conflicts: 8 shift/reduce
State 79 conflicts: 8 shift/reduce
State 80 conflicts: 8 shift/reduce
State 81 conflicts: 8 shift/reduce
State 82 conflicts: 8 shift/reduce
State 83 conflicts: 8 shift/reduce
State 84 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls

    2 decls: decls decl
    3      | /* empty */

    4 decl: INT IDENTIFIER SEMICOLON
    5     | INT IDENTIFIER ASSIGN expr SEMICOLON
    6     | FLOAT IDENTIFIER SEMICOLON
    7     | FLOAT IDENTIFIER ASSIGN expr SEMICOLON
    8     | DOUBLE IDENTIFIER SEMICOLON
    9     | DOUBLE IDENTIFIER ASSIGN expr SEMICOLON
   10     | func_decl
   11     | stmt

   12 func_decl: INT IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE
   13          | FLOAT IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE
   14          | VOID IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE

   15 params: param_list
   16       | /* empty */

   17 param_list: param
   18           | param_list COMMA param

   19 param: INT IDENTIFIER
   20      | FLOAT IDENTIFIER
   21      | DOUBLE IDENTIFIER

   22 boolean_literal: TRUE
   23                | FALSE

   24 stmt: IDENTIFIER ASSIGN expr SEMICOLON
   25     | IDENTIFIER ASSIGN expr
   26     | RETURN expr SEMICOLON
   27     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   28     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE
   29     | WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE
   30     | FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE
   31     | IDENTIFIER PLUSPLUS SEMICOLON
   32     | IDENTIFIER PLUSPLUS
   33     | IDENTIFIER MINUSMINUS SEMICOLON
   34     | IDENTIFIER MINUSMINUS
   35     | error SEMICOLON

   36 stmt_list: stmt
   37          | stmt_list stmt

   38 expr: expr PLUS expr
   39     | expr MINUS expr
   40     | expr TIMES expr
   41     | expr DIVIDE expr
   42     | expr LT expr
   43     | expr GT expr
   44     | expr LE expr
   45     | expr GE expr
   46     | IDENTIFIER EQUAL expr
   47     | boolean_literal
   48     | IDENTIFIER
   49     | NUMBER
   50     | FLOAT_NUMBER
   51     | DOUBLE_NUMBER
   52     | LPAREN expr RPAREN
   53     | error


Terminals, with rules where they appear

$end (0) 0
error (256) 35 53
INT (258) 4 5 12 19
FLOAT (259) 6 7 13 20
VOID (260) 14
DOUBLE (261) 8 9 21
RETURN (262) 26
TRUE (263) 22
FALSE (264) 23
IF (265) 27 28
ELSE (266) 27
WHILE (267) 29
FOR (268) 30
PLUS (269) 38
MINUS (270) 39
TIMES (271) 40
DIVIDE (272) 41
ASSIGN (273) 5 7 9 24 25
EQUAL (274) 46
SEMICOLON (275) 4 5 6 7 8 9 24 26 30 31 33 35
PLUSPLUS (276) 31 32
MINUSMINUS (277) 33 34
LPAREN (278) 12 13 14 27 28 29 30 52
RPAREN (279) 12 13 14 27 28 29 30 52
LBRACE (280) 12 13 14 27 28 29 30
RBRACE (281) 12 13 14 27 28 29 30
COMMA (282) 18
LT (283) 42
GT (284) 43
LE (285) 44
GE (286) 45
IDENTIFIER (287) 4 5 6 7 8 9 12 13 14 19 20 21 24 25 31 32 33 34 46
    48
NUMBER (288) 49
FLOAT_NUMBER (289) 50
DOUBLE_NUMBER (290) 51


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
decls (38)
    on left: 2 3, on right: 1 2
decl (39)
    on left: 4 5 6 7 8 9 10 11, on right: 2
func_decl (40)
    on left: 12 13 14, on right: 10
params (41)
    on left: 15 16, on right: 12 13 14
param_list (42)
    on left: 17 18, on right: 15 18
param (43)
    on left: 19 20 21, on right: 17 18
boolean_literal (44)
    on left: 22 23, on right: 47
stmt (45)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35, on right: 11 30 36
    37
stmt_list (46)
    on left: 36 37, on right: 12 13 14 27 28 29 30 37
expr (47)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53, on right:
    5 7 9 24 25 26 27 28 29 30 38 39 40 41 42 43 44 45 46 52


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (decls)

    program  go to state 1
    decls    go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: decls .
    2 decls: decls . decl

    error       shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    VOID        shift, and go to state 7
    DOUBLE      shift, and go to state 8
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    $end  reduce using rule 1 (program)

    decl       go to state 14
    func_decl  go to state 15
    stmt       go to state 16


state 3

    0 $accept: program $end .

    $default  accept


state 4

   35 stmt: error . SEMICOLON

    SEMICOLON  shift, and go to state 17


state 5

    4 decl: INT . IDENTIFIER SEMICOLON
    5     | INT . IDENTIFIER ASSIGN expr SEMICOLON
   12 func_decl: INT . IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE

    IDENTIFIER  shift, and go to state 18


state 6

    6 decl: FLOAT . IDENTIFIER SEMICOLON
    7     | FLOAT . IDENTIFIER ASSIGN expr SEMICOLON
   13 func_decl: FLOAT . IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE

    IDENTIFIER  shift, and go to state 19


state 7

   14 func_decl: VOID . IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE

    IDENTIFIER  shift, and go to state 20


state 8

    8 decl: DOUBLE . IDENTIFIER SEMICOLON
    9     | DOUBLE . IDENTIFIER ASSIGN expr SEMICOLON

    IDENTIFIER  shift, and go to state 21


state 9

   26 stmt: RETURN . expr SEMICOLON

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 31


state 10

   27 stmt: IF . LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   28     | IF . LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 32


state 11

   29 stmt: WHILE . LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 33


state 12

   30 stmt: FOR . LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 34


state 13

   24 stmt: IDENTIFIER . ASSIGN expr SEMICOLON
   25     | IDENTIFIER . ASSIGN expr
   31     | IDENTIFIER . PLUSPLUS SEMICOLON
   32     | IDENTIFIER . PLUSPLUS
   33     | IDENTIFIER . MINUSMINUS SEMICOLON
   34     | IDENTIFIER . MINUSMINUS

    ASSIGN      shift, and go to state 35
    PLUSPLUS    shift, and go to state 36
    MINUSMINUS  shift, and go to state 37


state 14

    2 decls: decls decl .

    $default  reduce using rule 2 (decls)


state 15

   10 decl: func_decl .

    $default  reduce using rule 10 (decl)


state 16

   11 decl: stmt .

    $default  reduce using rule 11 (decl)


state 17

   35 stmt: error SEMICOLON .

    $default  reduce using rule 35 (stmt)


state 18

    4 decl: INT IDENTIFIER . SEMICOLON
    5     | INT IDENTIFIER . ASSIGN expr SEMICOLON
   12 func_decl: INT IDENTIFIER . LPAREN params RPAREN LBRACE stmt_list RBRACE

    ASSIGN     shift, and go to state 38
    SEMICOLON  shift, and go to state 39
    LPAREN     shift, and go to state 40


state 19

    6 decl: FLOAT IDENTIFIER . SEMICOLON
    7     | FLOAT IDENTIFIER . ASSIGN expr SEMICOLON
   13 func_decl: FLOAT IDENTIFIER . LPAREN params RPAREN LBRACE stmt_list RBRACE

    ASSIGN     shift, and go to state 41
    SEMICOLON  shift, and go to state 42
    LPAREN     shift, and go to state 43


state 20

   14 func_decl: VOID IDENTIFIER . LPAREN params RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 44


state 21

    8 decl: DOUBLE IDENTIFIER . SEMICOLON
    9     | DOUBLE IDENTIFIER . ASSIGN expr SEMICOLON

    ASSIGN     shift, and go to state 45
    SEMICOLON  shift, and go to state 46


state 22

   53 expr: error .

    $default  reduce using rule 53 (expr)


state 23

   22 boolean_literal: TRUE .

    $default  reduce using rule 22 (boolean_literal)


state 24

   23 boolean_literal: FALSE .

    $default  reduce using rule 23 (boolean_literal)


state 25

   52 expr: LPAREN . expr RPAREN

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 47


state 26

   46 expr: IDENTIFIER . EQUAL expr
   48     | IDENTIFIER .

    EQUAL  shift, and go to state 48

    $default  reduce using rule 48 (expr)


state 27

   49 expr: NUMBER .

    $default  reduce using rule 49 (expr)


state 28

   50 expr: FLOAT_NUMBER .

    $default  reduce using rule 50 (expr)


state 29

   51 expr: DOUBLE_NUMBER .

    $default  reduce using rule 51 (expr)


state 30

   47 expr: boolean_literal .

    $default  reduce using rule 47 (expr)


state 31

   26 stmt: RETURN expr . SEMICOLON
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    SEMICOLON  shift, and go to state 53
    LT         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    GE         shift, and go to state 57


state 32

   27 stmt: IF LPAREN . expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   28     | IF LPAREN . expr RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 58


state 33

   29 stmt: WHILE LPAREN . expr RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 59


state 34

   30 stmt: FOR LPAREN . stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 60


state 35

   24 stmt: IDENTIFIER ASSIGN . expr SEMICOLON
   25     | IDENTIFIER ASSIGN . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 61


state 36

   31 stmt: IDENTIFIER PLUSPLUS . SEMICOLON
   32     | IDENTIFIER PLUSPLUS .

    SEMICOLON  shift, and go to state 62

    $default  reduce using rule 32 (stmt)


state 37

   33 stmt: IDENTIFIER MINUSMINUS . SEMICOLON
   34     | IDENTIFIER MINUSMINUS .

    SEMICOLON  shift, and go to state 63

    $default  reduce using rule 34 (stmt)


state 38

    5 decl: INT IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 64


state 39

    4 decl: INT IDENTIFIER SEMICOLON .

    $default  reduce using rule 4 (decl)


state 40

   12 func_decl: INT IDENTIFIER LPAREN . params RPAREN LBRACE stmt_list RBRACE

    INT     shift, and go to state 65
    FLOAT   shift, and go to state 66
    DOUBLE  shift, and go to state 67

    $default  reduce using rule 16 (params)

    params      go to state 68
    param_list  go to state 69
    param       go to state 70


state 41

    7 decl: FLOAT IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 71


state 42

    6 decl: FLOAT IDENTIFIER SEMICOLON .

    $default  reduce using rule 6 (decl)


state 43

   13 func_decl: FLOAT IDENTIFIER LPAREN . params RPAREN LBRACE stmt_list RBRACE

    INT     shift, and go to state 65
    FLOAT   shift, and go to state 66
    DOUBLE  shift, and go to state 67

    $default  reduce using rule 16 (params)

    params      go to state 72
    param_list  go to state 69
    param       go to state 70


state 44

   14 func_decl: VOID IDENTIFIER LPAREN . params RPAREN LBRACE stmt_list RBRACE

    INT     shift, and go to state 65
    FLOAT   shift, and go to state 66
    DOUBLE  shift, and go to state 67

    $default  reduce using rule 16 (params)

    params      go to state 73
    param_list  go to state 69
    param       go to state 70


state 45

    9 decl: DOUBLE IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 74


state 46

    8 decl: DOUBLE IDENTIFIER SEMICOLON .

    $default  reduce using rule 8 (decl)


state 47

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr
   52     | LPAREN expr . RPAREN

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    RPAREN  shift, and go to state 75
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57


state 48

   46 expr: IDENTIFIER EQUAL . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 76


state 49

   38 expr: expr PLUS . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 77


state 50

   39 expr: expr MINUS . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 78


state 51

   40 expr: expr TIMES . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 79


state 52

   41 expr: expr DIVIDE . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 80


state 53

   26 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 26 (stmt)


state 54

   42 expr: expr LT . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 81


state 55

   43 expr: expr GT . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 82


state 56

   44 expr: expr LE . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 83


state 57

   45 expr: expr GE . expr

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 84


state 58

   27 stmt: IF LPAREN expr . RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   28     | IF LPAREN expr . RPAREN LBRACE stmt_list RBRACE
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    RPAREN  shift, and go to state 85
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57


state 59

   29 stmt: WHILE LPAREN expr . RPAREN LBRACE stmt_list RBRACE
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    RPAREN  shift, and go to state 86
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57


state 60

   30 stmt: FOR LPAREN stmt . expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    LPAREN         shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    NUMBER         shift, and go to state 27
    FLOAT_NUMBER   shift, and go to state 28
    DOUBLE_NUMBER  shift, and go to state 29

    boolean_literal  go to state 30
    expr             go to state 87


state 61

   24 stmt: IDENTIFIER ASSIGN expr . SEMICOLON
   25     | IDENTIFIER ASSIGN expr .
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    SEMICOLON  shift, and go to state 88
    LT         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    GE         shift, and go to state 57

    $default  reduce using rule 25 (stmt)


state 62

   31 stmt: IDENTIFIER PLUSPLUS SEMICOLON .

    $default  reduce using rule 31 (stmt)


state 63

   33 stmt: IDENTIFIER MINUSMINUS SEMICOLON .

    $default  reduce using rule 33 (stmt)


state 64

    5 decl: INT IDENTIFIER ASSIGN expr . SEMICOLON
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    SEMICOLON  shift, and go to state 89
    LT         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    GE         shift, and go to state 57


state 65

   19 param: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 90


state 66

   20 param: FLOAT . IDENTIFIER

    IDENTIFIER  shift, and go to state 91


state 67

   21 param: DOUBLE . IDENTIFIER

    IDENTIFIER  shift, and go to state 92


state 68

   12 func_decl: INT IDENTIFIER LPAREN params . RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 93


state 69

   15 params: param_list .
   18 param_list: param_list . COMMA param

    COMMA  shift, and go to state 94

    $default  reduce using rule 15 (params)


state 70

   17 param_list: param .

    $default  reduce using rule 17 (param_list)


state 71

    7 decl: FLOAT IDENTIFIER ASSIGN expr . SEMICOLON
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    SEMICOLON  shift, and go to state 95
    LT         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    GE         shift, and go to state 57


state 72

   13 func_decl: FLOAT IDENTIFIER LPAREN params . RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 96


state 73

   14 func_decl: VOID IDENTIFIER LPAREN params . RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 97


state 74

    9 decl: DOUBLE IDENTIFIER ASSIGN expr . SEMICOLON
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    SEMICOLON  shift, and go to state 98
    LT         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    GE         shift, and go to state 57


state 75

   52 expr: LPAREN expr RPAREN .

    $default  reduce using rule 52 (expr)


state 76

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr
   46     | IDENTIFIER EQUAL expr .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 46 (expr)]
    MINUS     [reduce using rule 46 (expr)]
    TIMES     [reduce using rule 46 (expr)]
    DIVIDE    [reduce using rule 46 (expr)]
    LT        [reduce using rule 46 (expr)]
    GT        [reduce using rule 46 (expr)]
    LE        [reduce using rule 46 (expr)]
    GE        [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


state 77

   38 expr: expr . PLUS expr
   38     | expr PLUS expr .
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 38 (expr)]
    MINUS     [reduce using rule 38 (expr)]
    TIMES     [reduce using rule 38 (expr)]
    DIVIDE    [reduce using rule 38 (expr)]
    LT        [reduce using rule 38 (expr)]
    GT        [reduce using rule 38 (expr)]
    LE        [reduce using rule 38 (expr)]
    GE        [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


state 78

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   39     | expr MINUS expr .
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 39 (expr)]
    MINUS     [reduce using rule 39 (expr)]
    TIMES     [reduce using rule 39 (expr)]
    DIVIDE    [reduce using rule 39 (expr)]
    LT        [reduce using rule 39 (expr)]
    GT        [reduce using rule 39 (expr)]
    LE        [reduce using rule 39 (expr)]
    GE        [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


state 79

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   40     | expr TIMES expr .
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 40 (expr)]
    MINUS     [reduce using rule 40 (expr)]
    TIMES     [reduce using rule 40 (expr)]
    DIVIDE    [reduce using rule 40 (expr)]
    LT        [reduce using rule 40 (expr)]
    GT        [reduce using rule 40 (expr)]
    LE        [reduce using rule 40 (expr)]
    GE        [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


state 80

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   41     | expr DIVIDE expr .
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 41 (expr)]
    MINUS     [reduce using rule 41 (expr)]
    TIMES     [reduce using rule 41 (expr)]
    DIVIDE    [reduce using rule 41 (expr)]
    LT        [reduce using rule 41 (expr)]
    GT        [reduce using rule 41 (expr)]
    LE        [reduce using rule 41 (expr)]
    GE        [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


state 81

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   42     | expr LT expr .
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 42 (expr)]
    MINUS     [reduce using rule 42 (expr)]
    TIMES     [reduce using rule 42 (expr)]
    DIVIDE    [reduce using rule 42 (expr)]
    LT        [reduce using rule 42 (expr)]
    GT        [reduce using rule 42 (expr)]
    LE        [reduce using rule 42 (expr)]
    GE        [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


state 82

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   43     | expr GT expr .
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 43 (expr)]
    MINUS     [reduce using rule 43 (expr)]
    TIMES     [reduce using rule 43 (expr)]
    DIVIDE    [reduce using rule 43 (expr)]
    LT        [reduce using rule 43 (expr)]
    GT        [reduce using rule 43 (expr)]
    LE        [reduce using rule 43 (expr)]
    GE        [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


state 83

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   44     | expr LE expr .
   45     | expr . GE expr

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 44 (expr)]
    MINUS     [reduce using rule 44 (expr)]
    TIMES     [reduce using rule 44 (expr)]
    DIVIDE    [reduce using rule 44 (expr)]
    LT        [reduce using rule 44 (expr)]
    GT        [reduce using rule 44 (expr)]
    LE        [reduce using rule 44 (expr)]
    GE        [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


state 84

   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr
   45     | expr GE expr .

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 54
    GT      shift, and go to state 55
    LE      shift, and go to state 56
    GE      shift, and go to state 57

    PLUS      [reduce using rule 45 (expr)]
    MINUS     [reduce using rule 45 (expr)]
    TIMES     [reduce using rule 45 (expr)]
    DIVIDE    [reduce using rule 45 (expr)]
    LT        [reduce using rule 45 (expr)]
    GT        [reduce using rule 45 (expr)]
    LE        [reduce using rule 45 (expr)]
    GE        [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


state 85

   27 stmt: IF LPAREN expr RPAREN . LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   28     | IF LPAREN expr RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 99


state 86

   29 stmt: WHILE LPAREN expr RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 100


state 87

   30 stmt: FOR LPAREN stmt expr . SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE
   38 expr: expr . PLUS expr
   39     | expr . MINUS expr
   40     | expr . TIMES expr
   41     | expr . DIVIDE expr
   42     | expr . LT expr
   43     | expr . GT expr
   44     | expr . LE expr
   45     | expr . GE expr

    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    SEMICOLON  shift, and go to state 101
    LT         shift, and go to state 54
    GT         shift, and go to state 55
    LE         shift, and go to state 56
    GE         shift, and go to state 57


state 88

   24 stmt: IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 24 (stmt)


state 89

    5 decl: INT IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 5 (decl)


state 90

   19 param: INT IDENTIFIER .

    $default  reduce using rule 19 (param)


state 91

   20 param: FLOAT IDENTIFIER .

    $default  reduce using rule 20 (param)


state 92

   21 param: DOUBLE IDENTIFIER .

    $default  reduce using rule 21 (param)


state 93

   12 func_decl: INT IDENTIFIER LPAREN params RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 102


state 94

   18 param_list: param_list COMMA . param

    INT     shift, and go to state 65
    FLOAT   shift, and go to state 66
    DOUBLE  shift, and go to state 67

    param  go to state 103


state 95

    7 decl: FLOAT IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 7 (decl)


state 96

   13 func_decl: FLOAT IDENTIFIER LPAREN params RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 104


state 97

   14 func_decl: VOID IDENTIFIER LPAREN params RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 105


state 98

    9 decl: DOUBLE IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 9 (decl)


state 99

   27 stmt: IF LPAREN expr RPAREN LBRACE . stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   28     | IF LPAREN expr RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt       go to state 106
    stmt_list  go to state 107


state 100

   29 stmt: WHILE LPAREN expr RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt       go to state 106
    stmt_list  go to state 108


state 101

   30 stmt: FOR LPAREN stmt expr SEMICOLON . stmt RPAREN LBRACE stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 109


state 102

   12 func_decl: INT IDENTIFIER LPAREN params RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt       go to state 106
    stmt_list  go to state 110


state 103

   18 param_list: param_list COMMA param .

    $default  reduce using rule 18 (param_list)


state 104

   13 func_decl: FLOAT IDENTIFIER LPAREN params RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt       go to state 106
    stmt_list  go to state 111


state 105

   14 func_decl: VOID IDENTIFIER LPAREN params RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt       go to state 106
    stmt_list  go to state 112


state 106

   36 stmt_list: stmt .

    $default  reduce using rule 36 (stmt_list)


state 107

   27 stmt: IF LPAREN expr RPAREN LBRACE stmt_list . RBRACE ELSE LBRACE stmt_list RBRACE
   28     | IF LPAREN expr RPAREN LBRACE stmt_list . RBRACE
   37 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RBRACE      shift, and go to state 113
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 114


state 108

   29 stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list . RBRACE
   37 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RBRACE      shift, and go to state 115
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 114


state 109

   30 stmt: FOR LPAREN stmt expr SEMICOLON stmt . RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 116


state 110

   12 func_decl: INT IDENTIFIER LPAREN params RPAREN LBRACE stmt_list . RBRACE
   37 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RBRACE      shift, and go to state 117
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 114


state 111

   13 func_decl: FLOAT IDENTIFIER LPAREN params RPAREN LBRACE stmt_list . RBRACE
   37 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RBRACE      shift, and go to state 118
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 114


state 112

   14 func_decl: VOID IDENTIFIER LPAREN params RPAREN LBRACE stmt_list . RBRACE
   37 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RBRACE      shift, and go to state 119
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 114


state 113

   27 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE . ELSE LBRACE stmt_list RBRACE
   28     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE .

    ELSE  shift, and go to state 120

    $default  reduce using rule 28 (stmt)


state 114

   37 stmt_list: stmt_list stmt .

    $default  reduce using rule 37 (stmt_list)


state 115

   29 stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 29 (stmt)


state 116

   30 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 121


state 117

   12 func_decl: INT IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 12 (func_decl)


state 118

   13 func_decl: FLOAT IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 13 (func_decl)


state 119

   14 func_decl: VOID IDENTIFIER LPAREN params RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 14 (func_decl)


state 120

   27 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 122


state 121

   30 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt       go to state 106
    stmt_list  go to state 123


state 122

   27 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    stmt       go to state 106
    stmt_list  go to state 124


state 123

   30 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list . RBRACE
   37 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RBRACE      shift, and go to state 125
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 114


state 124

   27 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list . RBRACE
   37 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RBRACE      shift, and go to state 126
    IDENTIFIER  shift, and go to state 13

    stmt  go to state 114


state 125

   30 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 30 (stmt)


state 126

   27 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .

    $default  reduce using rule 27 (stmt)
