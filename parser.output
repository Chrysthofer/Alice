State 27 conflicts: 1 shift/reduce
State 49 conflicts: 15 shift/reduce
State 86 conflicts: 2 shift/reduce
State 87 conflicts: 2 shift/reduce
State 88 conflicts: 2 shift/reduce
State 89 conflicts: 2 shift/reduce
State 90 conflicts: 2 shift/reduce
State 91 conflicts: 2 shift/reduce
State 92 conflicts: 2 shift/reduce
State 93 conflicts: 2 shift/reduce
State 94 conflicts: 15 shift/reduce
State 95 conflicts: 2 shift/reduce
State 96 conflicts: 15 shift/reduce
State 97 conflicts: 2 shift/reduce
State 98 conflicts: 2 shift/reduce
State 99 conflicts: 2 shift/reduce
State 100 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls

    2 decls: decls decl
    3      | /* empty */

    4 decl: INT IDENTIFIER SEMICOLON
    5     | INT IDENTIFIER ASSIGN expr SEMICOLON
    6     | FLOAT IDENTIFIER SEMICOLON
    7     | FLOAT IDENTIFIER ASSIGN expr SEMICOLON
    8     | DOUBLE IDENTIFIER SEMICOLON
    9     | DOUBLE IDENTIFIER ASSIGN expr SEMICOLON
   10     | stmt

   11 boolean_literal: TRUE
   12                | FALSE

   13 stmt: IDENTIFIER ASSIGN expr SEMICOLON
   14     | IDENTIFIER ASSIGN expr
   15     | RETURN expr SEMICOLON
   16     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE
   18     | WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE
   19     | FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE
   20     | OUT LPAREN expr COMMA expr RPAREN SEMICOLON
   21     | IN LPAREN expr RPAREN SEMICOLON
   22     | IDENTIFIER PLUSPLUS SEMICOLON
   23     | IDENTIFIER PLUSPLUS
   24     | IDENTIFIER MINUSMINUS SEMICOLON
   25     | IDENTIFIER MINUSMINUS
   26     | INT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON
   27     | FLOAT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON
   28     | error SEMICOLON

   29 stmt_list: stmt
   30          | stmt_list stmt

   31 expr: expr PLUS expr
   32     | expr MINUS expr
   33     | expr TIMES expr
   34     | expr DIVIDE expr
   35     | expr MODULUS expr
   36     | expr LT expr
   37     | expr GT expr
   38     | expr LE expr
   39     | expr GE expr
   40     | expr AND expr
   41     | expr OR expr
   42     | expr XOR expr
   43     | expr COMMA
   44     | IDENTIFIER EQUAL expr
   45     | expr DIF expr
   46     | expr EQUAL expr
   47     | boolean_literal
   48     | IDENTIFIER
   49     | NUMBER
   50     | FLOAT_NUMBER
   51     | DOUBLE_NUMBER
   52     | LPAREN expr RPAREN
   53     | IN LPAREN expr RPAREN
   54     | NORM expr
   55     | error


Terminals, with rules where they appear

$end (0) 0
error (256) 28 55
INT (258) 4 5 26
FLOAT (259) 6 7 27
DOUBLE (260) 8 9
RETURN (261) 15
TRUE (262) 11
FALSE (263) 12
AND (264) 40
OR (265) 41
XOR (266) 42
NORM (267) 54
IF (268) 16 17
ELSE (269) 16
WHILE (270) 18
FOR (271) 19
PLUS (272) 31
MINUS (273) 32
TIMES (274) 33
DIVIDE (275) 34
MODULUS (276) 35
ASSIGN (277) 5 7 9 13 14
EQUAL (278) 26 27 44 46
DIF (279) 45
SEMICOLON (280) 4 5 6 7 8 9 13 15 19 20 21 22 24 26 27 28
PLUSPLUS (281) 22 23
MINUSMINUS (282) 24 25
LPAREN (283) 16 17 18 19 20 21 52 53
RPAREN (284) 16 17 18 19 20 21 52 53
LBRACE (285) 16 17 18 19 26 27
RBRACE (286) 16 17 18 19 26 27
LBRACKET (287) 26 27
RBRACKET (288) 26 27
COMMA (289) 20 43
LT (290) 36
GT (291) 37
LE (292) 38
GE (293) 39
IN (294) 21 53
OUT (295) 20
IDENTIFIER (296) 4 5 6 7 8 9 13 14 22 23 24 25 26 27 44 48
NUMBER (297) 49
FLOAT_NUMBER (298) 50
DOUBLE_NUMBER (299) 51


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
decls (47)
    on left: 2 3, on right: 1 2
decl (48)
    on left: 4 5 6 7 8 9 10, on right: 2
boolean_literal (49)
    on left: 11 12, on right: 47
stmt (50)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    10 19 29 30
stmt_list (51)
    on left: 29 30, on right: 16 17 18 19 30
expr (52)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51 52 53 54 55, on right: 5 7 9 13 14 15 16 17 18 19 20 21
    26 27 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 54


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (decls)

    program  go to state 1
    decls    go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: decls .
    2 decls: decls . decl

    error       shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    DOUBLE      shift, and go to state 7
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    $end  reduce using rule 1 (program)

    decl  go to state 15
    stmt  go to state 16


state 3

    0 $accept: program $end .

    $default  accept


state 4

   28 stmt: error . SEMICOLON

    SEMICOLON  shift, and go to state 17


state 5

    4 decl: INT . IDENTIFIER SEMICOLON
    5     | INT . IDENTIFIER ASSIGN expr SEMICOLON
   26 stmt: INT . IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    IDENTIFIER  shift, and go to state 18


state 6

    6 decl: FLOAT . IDENTIFIER SEMICOLON
    7     | FLOAT . IDENTIFIER ASSIGN expr SEMICOLON
   27 stmt: FLOAT . IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    IDENTIFIER  shift, and go to state 19


state 7

    8 decl: DOUBLE . IDENTIFIER SEMICOLON
    9     | DOUBLE . IDENTIFIER ASSIGN expr SEMICOLON

    IDENTIFIER  shift, and go to state 20


state 8

   15 stmt: RETURN . expr SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 32


state 9

   16 stmt: IF . LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF . LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 33


state 10

   18 stmt: WHILE . LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 34


state 11

   19 stmt: FOR . LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 35


state 12

   21 stmt: IN . LPAREN expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 36


state 13

   20 stmt: OUT . LPAREN expr COMMA expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 37


state 14

   13 stmt: IDENTIFIER . ASSIGN expr SEMICOLON
   14     | IDENTIFIER . ASSIGN expr
   22     | IDENTIFIER . PLUSPLUS SEMICOLON
   23     | IDENTIFIER . PLUSPLUS
   24     | IDENTIFIER . MINUSMINUS SEMICOLON
   25     | IDENTIFIER . MINUSMINUS

    ASSIGN      shift, and go to state 38
    PLUSPLUS    shift, and go to state 39
    MINUSMINUS  shift, and go to state 40


state 15

    2 decls: decls decl .

    $default  reduce using rule 2 (decls)


state 16

   10 decl: stmt .

    $default  reduce using rule 10 (decl)


state 17

   28 stmt: error SEMICOLON .

    $default  reduce using rule 28 (stmt)


state 18

    4 decl: INT IDENTIFIER . SEMICOLON
    5     | INT IDENTIFIER . ASSIGN expr SEMICOLON
   26 stmt: INT IDENTIFIER . LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    ASSIGN     shift, and go to state 41
    SEMICOLON  shift, and go to state 42
    LBRACKET   shift, and go to state 43


state 19

    6 decl: FLOAT IDENTIFIER . SEMICOLON
    7     | FLOAT IDENTIFIER . ASSIGN expr SEMICOLON
   27 stmt: FLOAT IDENTIFIER . LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    ASSIGN     shift, and go to state 44
    SEMICOLON  shift, and go to state 45
    LBRACKET   shift, and go to state 46


state 20

    8 decl: DOUBLE IDENTIFIER . SEMICOLON
    9     | DOUBLE IDENTIFIER . ASSIGN expr SEMICOLON

    ASSIGN     shift, and go to state 47
    SEMICOLON  shift, and go to state 48


state 21

   55 expr: error .

    $default  reduce using rule 55 (expr)


state 22

   11 boolean_literal: TRUE .

    $default  reduce using rule 11 (boolean_literal)


state 23

   12 boolean_literal: FALSE .

    $default  reduce using rule 12 (boolean_literal)


state 24

   54 expr: NORM . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 49


state 25

   52 expr: LPAREN . expr RPAREN

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 50


state 26

   53 expr: IN . LPAREN expr RPAREN

    LPAREN  shift, and go to state 51


state 27

   44 expr: IDENTIFIER . EQUAL expr
   48     | IDENTIFIER .

    EQUAL  shift, and go to state 52

    EQUAL     [reduce using rule 48 (expr)]
    $default  reduce using rule 48 (expr)


state 28

   49 expr: NUMBER .

    $default  reduce using rule 49 (expr)


state 29

   50 expr: FLOAT_NUMBER .

    $default  reduce using rule 50 (expr)


state 30

   51 expr: DOUBLE_NUMBER .

    $default  reduce using rule 51 (expr)


state 31

   47 expr: boolean_literal .

    $default  reduce using rule 47 (expr)


state 32

   15 stmt: RETURN expr . SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND        shift, and go to state 53
    OR         shift, and go to state 54
    XOR        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    TIMES      shift, and go to state 58
    DIVIDE     shift, and go to state 59
    MODULUS    shift, and go to state 60
    EQUAL      shift, and go to state 61
    DIF        shift, and go to state 62
    SEMICOLON  shift, and go to state 63
    COMMA      shift, and go to state 64
    LT         shift, and go to state 65
    GT         shift, and go to state 66
    LE         shift, and go to state 67
    GE         shift, and go to state 68


state 33

   16 stmt: IF LPAREN . expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN . expr RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 69


state 34

   18 stmt: WHILE LPAREN . expr RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 70


state 35

   19 stmt: FOR LPAREN . stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt  go to state 73


state 36

   21 stmt: IN LPAREN . expr RPAREN SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 74


state 37

   20 stmt: OUT LPAREN . expr COMMA expr RPAREN SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 75


state 38

   13 stmt: IDENTIFIER ASSIGN . expr SEMICOLON
   14     | IDENTIFIER ASSIGN . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 76


state 39

   22 stmt: IDENTIFIER PLUSPLUS . SEMICOLON
   23     | IDENTIFIER PLUSPLUS .

    SEMICOLON  shift, and go to state 77

    $default  reduce using rule 23 (stmt)


state 40

   24 stmt: IDENTIFIER MINUSMINUS . SEMICOLON
   25     | IDENTIFIER MINUSMINUS .

    SEMICOLON  shift, and go to state 78

    $default  reduce using rule 25 (stmt)


state 41

    5 decl: INT IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 79


state 42

    4 decl: INT IDENTIFIER SEMICOLON .

    $default  reduce using rule 4 (decl)


state 43

   26 stmt: INT IDENTIFIER LBRACKET . RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    RBRACKET  shift, and go to state 80


state 44

    7 decl: FLOAT IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 81


state 45

    6 decl: FLOAT IDENTIFIER SEMICOLON .

    $default  reduce using rule 6 (decl)


state 46

   27 stmt: FLOAT IDENTIFIER LBRACKET . RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    RBRACKET  shift, and go to state 82


state 47

    9 decl: DOUBLE IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 83


state 48

    8 decl: DOUBLE IDENTIFIER SEMICOLON .

    $default  reduce using rule 8 (decl)


state 49

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr
   54     | NORM expr .

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    AND       [reduce using rule 54 (expr)]
    OR        [reduce using rule 54 (expr)]
    XOR       [reduce using rule 54 (expr)]
    PLUS      [reduce using rule 54 (expr)]
    MINUS     [reduce using rule 54 (expr)]
    TIMES     [reduce using rule 54 (expr)]
    DIVIDE    [reduce using rule 54 (expr)]
    MODULUS   [reduce using rule 54 (expr)]
    EQUAL     [reduce using rule 54 (expr)]
    DIF       [reduce using rule 54 (expr)]
    COMMA     [reduce using rule 54 (expr)]
    LT        [reduce using rule 54 (expr)]
    GT        [reduce using rule 54 (expr)]
    LE        [reduce using rule 54 (expr)]
    GE        [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


state 50

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr
   52     | LPAREN expr . RPAREN

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RPAREN   shift, and go to state 84
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 51

   53 expr: IN LPAREN . expr RPAREN

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 85


state 52

   44 expr: IDENTIFIER EQUAL . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 86


state 53

   40 expr: expr AND . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 87


state 54

   41 expr: expr OR . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 88


state 55

   42 expr: expr XOR . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 89


state 56

   31 expr: expr PLUS . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 90


state 57

   32 expr: expr MINUS . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 91


state 58

   33 expr: expr TIMES . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 92


state 59

   34 expr: expr DIVIDE . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 93


state 60

   35 expr: expr MODULUS . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 94


state 61

   46 expr: expr EQUAL . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 95


state 62

   45 expr: expr DIF . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 96


state 63

   15 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 64

   43 expr: expr COMMA .

    $default  reduce using rule 43 (expr)


state 65

   36 expr: expr LT . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 97


state 66

   37 expr: expr GT . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 98


state 67

   38 expr: expr LE . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 99


state 68

   39 expr: expr GE . expr

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 100


state 69

   16 stmt: IF LPAREN expr . RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr . RPAREN LBRACE stmt_list RBRACE
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RPAREN   shift, and go to state 101
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 70

   18 stmt: WHILE LPAREN expr . RPAREN LBRACE stmt_list RBRACE
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RPAREN   shift, and go to state 102
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 71

   26 stmt: INT . IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    IDENTIFIER  shift, and go to state 103


state 72

   27 stmt: FLOAT . IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    IDENTIFIER  shift, and go to state 104


state 73

   19 stmt: FOR LPAREN stmt . expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 105


state 74

   21 stmt: IN LPAREN expr . RPAREN SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RPAREN   shift, and go to state 106
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 75

   20 stmt: OUT LPAREN expr . COMMA expr RPAREN SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    COMMA    shift, and go to state 107
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 76

   13 stmt: IDENTIFIER ASSIGN expr . SEMICOLON
   14     | IDENTIFIER ASSIGN expr .
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND        shift, and go to state 53
    OR         shift, and go to state 54
    XOR        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    TIMES      shift, and go to state 58
    DIVIDE     shift, and go to state 59
    MODULUS    shift, and go to state 60
    EQUAL      shift, and go to state 61
    DIF        shift, and go to state 62
    SEMICOLON  shift, and go to state 108
    COMMA      shift, and go to state 64
    LT         shift, and go to state 65
    GT         shift, and go to state 66
    LE         shift, and go to state 67
    GE         shift, and go to state 68

    $default  reduce using rule 14 (stmt)


state 77

   22 stmt: IDENTIFIER PLUSPLUS SEMICOLON .

    $default  reduce using rule 22 (stmt)


state 78

   24 stmt: IDENTIFIER MINUSMINUS SEMICOLON .

    $default  reduce using rule 24 (stmt)


state 79

    5 decl: INT IDENTIFIER ASSIGN expr . SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND        shift, and go to state 53
    OR         shift, and go to state 54
    XOR        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    TIMES      shift, and go to state 58
    DIVIDE     shift, and go to state 59
    MODULUS    shift, and go to state 60
    EQUAL      shift, and go to state 61
    DIF        shift, and go to state 62
    SEMICOLON  shift, and go to state 109
    COMMA      shift, and go to state 64
    LT         shift, and go to state 65
    GT         shift, and go to state 66
    LE         shift, and go to state 67
    GE         shift, and go to state 68


state 80

   26 stmt: INT IDENTIFIER LBRACKET RBRACKET . EQUAL LBRACE expr RBRACE SEMICOLON

    EQUAL  shift, and go to state 110


state 81

    7 decl: FLOAT IDENTIFIER ASSIGN expr . SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND        shift, and go to state 53
    OR         shift, and go to state 54
    XOR        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    TIMES      shift, and go to state 58
    DIVIDE     shift, and go to state 59
    MODULUS    shift, and go to state 60
    EQUAL      shift, and go to state 61
    DIF        shift, and go to state 62
    SEMICOLON  shift, and go to state 111
    COMMA      shift, and go to state 64
    LT         shift, and go to state 65
    GT         shift, and go to state 66
    LE         shift, and go to state 67
    GE         shift, and go to state 68


state 82

   27 stmt: FLOAT IDENTIFIER LBRACKET RBRACKET . EQUAL LBRACE expr RBRACE SEMICOLON

    EQUAL  shift, and go to state 112


state 83

    9 decl: DOUBLE IDENTIFIER ASSIGN expr . SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND        shift, and go to state 53
    OR         shift, and go to state 54
    XOR        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    TIMES      shift, and go to state 58
    DIVIDE     shift, and go to state 59
    MODULUS    shift, and go to state 60
    EQUAL      shift, and go to state 61
    DIF        shift, and go to state 62
    SEMICOLON  shift, and go to state 113
    COMMA      shift, and go to state 64
    LT         shift, and go to state 65
    GT         shift, and go to state 66
    LE         shift, and go to state 67
    GE         shift, and go to state 68


state 84

   52 expr: LPAREN expr RPAREN .

    $default  reduce using rule 52 (expr)


state 85

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr
   53     | IN LPAREN expr . RPAREN

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RPAREN   shift, and go to state 114
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 86

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   44     | IDENTIFIER EQUAL expr .
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    MODULUS   [reduce using rule 44 (expr)]
    DIF       [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


state 87

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   40     | expr AND expr .
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    MODULUS   [reduce using rule 40 (expr)]
    DIF       [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


state 88

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   41     | expr OR expr .
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    MODULUS   [reduce using rule 41 (expr)]
    DIF       [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


state 89

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   42     | expr XOR expr .
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    MODULUS   [reduce using rule 42 (expr)]
    DIF       [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


state 90

   31 expr: expr . PLUS expr
   31     | expr PLUS expr .
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 31 (expr)]
    DIF       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


state 91

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   32     | expr MINUS expr .
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 32 (expr)]
    DIF       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


state 92

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   33     | expr TIMES expr .
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 33 (expr)]
    DIF       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


state 93

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   34     | expr DIVIDE expr .
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 34 (expr)]
    DIF       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


state 94

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   35     | expr MODULUS expr .
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    AND       [reduce using rule 35 (expr)]
    OR        [reduce using rule 35 (expr)]
    XOR       [reduce using rule 35 (expr)]
    PLUS      [reduce using rule 35 (expr)]
    MINUS     [reduce using rule 35 (expr)]
    TIMES     [reduce using rule 35 (expr)]
    DIVIDE    [reduce using rule 35 (expr)]
    MODULUS   [reduce using rule 35 (expr)]
    EQUAL     [reduce using rule 35 (expr)]
    DIF       [reduce using rule 35 (expr)]
    COMMA     [reduce using rule 35 (expr)]
    LT        [reduce using rule 35 (expr)]
    GT        [reduce using rule 35 (expr)]
    LE        [reduce using rule 35 (expr)]
    GE        [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


state 95

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr
   46     | expr EQUAL expr .

    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    MODULUS   [reduce using rule 46 (expr)]
    DIF       [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


state 96

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   45     | expr DIF expr .
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68

    AND       [reduce using rule 45 (expr)]
    OR        [reduce using rule 45 (expr)]
    XOR       [reduce using rule 45 (expr)]
    PLUS      [reduce using rule 45 (expr)]
    MINUS     [reduce using rule 45 (expr)]
    TIMES     [reduce using rule 45 (expr)]
    DIVIDE    [reduce using rule 45 (expr)]
    MODULUS   [reduce using rule 45 (expr)]
    EQUAL     [reduce using rule 45 (expr)]
    DIF       [reduce using rule 45 (expr)]
    COMMA     [reduce using rule 45 (expr)]
    LT        [reduce using rule 45 (expr)]
    GT        [reduce using rule 45 (expr)]
    LE        [reduce using rule 45 (expr)]
    GE        [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


state 97

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   36     | expr LT expr .
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 36 (expr)]
    DIF       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


state 98

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   37     | expr GT expr .
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 37 (expr)]
    DIF       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


state 99

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   38     | expr LE expr .
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 38 (expr)]
    DIF       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


state 100

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   39     | expr GE expr .
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    DIF      shift, and go to state 62

    MODULUS   [reduce using rule 39 (expr)]
    DIF       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


state 101

   16 stmt: IF LPAREN expr RPAREN . LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 115


state 102

   18 stmt: WHILE LPAREN expr RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 116


state 103

   26 stmt: INT IDENTIFIER . LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    LBRACKET  shift, and go to state 43


state 104

   27 stmt: FLOAT IDENTIFIER . LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON

    LBRACKET  shift, and go to state 46


state 105

   19 stmt: FOR LPAREN stmt expr . SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND        shift, and go to state 53
    OR         shift, and go to state 54
    XOR        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    TIMES      shift, and go to state 58
    DIVIDE     shift, and go to state 59
    MODULUS    shift, and go to state 60
    EQUAL      shift, and go to state 61
    DIF        shift, and go to state 62
    SEMICOLON  shift, and go to state 117
    COMMA      shift, and go to state 64
    LT         shift, and go to state 65
    GT         shift, and go to state 66
    LE         shift, and go to state 67
    GE         shift, and go to state 68


state 106

   21 stmt: IN LPAREN expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 118


state 107

   20 stmt: OUT LPAREN expr COMMA . expr RPAREN SEMICOLON
   43 expr: expr COMMA .

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    AND      reduce using rule 43 (expr)
    OR       reduce using rule 43 (expr)
    XOR      reduce using rule 43 (expr)
    PLUS     reduce using rule 43 (expr)
    MINUS    reduce using rule 43 (expr)
    TIMES    reduce using rule 43 (expr)
    DIVIDE   reduce using rule 43 (expr)
    MODULUS  reduce using rule 43 (expr)
    EQUAL    reduce using rule 43 (expr)
    DIF      reduce using rule 43 (expr)
    COMMA    reduce using rule 43 (expr)
    LT       reduce using rule 43 (expr)
    GT       reduce using rule 43 (expr)
    LE       reduce using rule 43 (expr)
    GE       reduce using rule 43 (expr)

    boolean_literal  go to state 31
    expr             go to state 119


state 108

   13 stmt: IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 13 (stmt)


state 109

    5 decl: INT IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 5 (decl)


state 110

   26 stmt: INT IDENTIFIER LBRACKET RBRACKET EQUAL . LBRACE expr RBRACE SEMICOLON

    LBRACE  shift, and go to state 120


state 111

    7 decl: FLOAT IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 7 (decl)


state 112

   27 stmt: FLOAT IDENTIFIER LBRACKET RBRACKET EQUAL . LBRACE expr RBRACE SEMICOLON

    LBRACE  shift, and go to state 121


state 113

    9 decl: DOUBLE IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 9 (decl)


state 114

   53 expr: IN LPAREN expr RPAREN .

    $default  reduce using rule 53 (expr)


state 115

   16 stmt: IF LPAREN expr RPAREN LBRACE . stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt       go to state 122
    stmt_list  go to state 123


state 116

   18 stmt: WHILE LPAREN expr RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt       go to state 122
    stmt_list  go to state 124


state 117

   19 stmt: FOR LPAREN stmt expr SEMICOLON . stmt RPAREN LBRACE stmt_list RBRACE

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt  go to state 125


state 118

   21 stmt: IN LPAREN expr RPAREN SEMICOLON .

    $default  reduce using rule 21 (stmt)


state 119

   20 stmt: OUT LPAREN expr COMMA expr . RPAREN SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RPAREN   shift, and go to state 126
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 120

   26 stmt: INT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE . expr RBRACE SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 127


state 121

   27 stmt: FLOAT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE . expr RBRACE SEMICOLON

    error          shift, and go to state 21
    TRUE           shift, and go to state 22
    FALSE          shift, and go to state 23
    NORM           shift, and go to state 24
    LPAREN         shift, and go to state 25
    IN             shift, and go to state 26
    IDENTIFIER     shift, and go to state 27
    NUMBER         shift, and go to state 28
    FLOAT_NUMBER   shift, and go to state 29
    DOUBLE_NUMBER  shift, and go to state 30

    boolean_literal  go to state 31
    expr             go to state 128


state 122

   29 stmt_list: stmt .

    $default  reduce using rule 29 (stmt_list)


state 123

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list . RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE stmt_list . RBRACE
   30 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 129
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt  go to state 130


state 124

   18 stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list . RBRACE
   30 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 131
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt  go to state 130


state 125

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt . RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 132


state 126

   20 stmt: OUT LPAREN expr COMMA expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 133


state 127

   26 stmt: INT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr . RBRACE SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RBRACE   shift, and go to state 134
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 128

   27 stmt: FLOAT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr . RBRACE SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . MODULUS expr
   36     | expr . LT expr
   37     | expr . GT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . XOR expr
   43     | expr . COMMA
   45     | expr . DIF expr
   46     | expr . EQUAL expr

    AND      shift, and go to state 53
    OR       shift, and go to state 54
    XOR      shift, and go to state 55
    PLUS     shift, and go to state 56
    MINUS    shift, and go to state 57
    TIMES    shift, and go to state 58
    DIVIDE   shift, and go to state 59
    MODULUS  shift, and go to state 60
    EQUAL    shift, and go to state 61
    DIF      shift, and go to state 62
    RBRACE   shift, and go to state 135
    COMMA    shift, and go to state 64
    LT       shift, and go to state 65
    GT       shift, and go to state 66
    LE       shift, and go to state 67
    GE       shift, and go to state 68


state 129

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE . ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE .

    ELSE  shift, and go to state 136

    $default  reduce using rule 17 (stmt)


state 130

   30 stmt_list: stmt_list stmt .

    $default  reduce using rule 30 (stmt_list)


state 131

   18 stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 18 (stmt)


state 132

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 137


state 133

   20 stmt: OUT LPAREN expr COMMA expr RPAREN SEMICOLON .

    $default  reduce using rule 20 (stmt)


state 134

   26 stmt: INT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 138


state 135

   27 stmt: FLOAT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 139


state 136

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 140


state 137

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt       go to state 122
    stmt_list  go to state 141


state 138

   26 stmt: INT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON .

    $default  reduce using rule 26 (stmt)


state 139

   27 stmt: FLOAT IDENTIFIER LBRACKET RBRACKET EQUAL LBRACE expr RBRACE SEMICOLON .

    $default  reduce using rule 27 (stmt)


state 140

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt       go to state 122
    stmt_list  go to state 142


state 141

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list . RBRACE
   30 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 143
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt  go to state 130


state 142

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list . RBRACE
   30 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    INT         shift, and go to state 71
    FLOAT       shift, and go to state 72
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 144
    IN          shift, and go to state 12
    OUT         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    stmt  go to state 130


state 143

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 19 (stmt)


state 144

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .

    $default  reduce using rule 16 (stmt)
