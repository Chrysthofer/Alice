State 61 conflicts: 8 shift/reduce
State 62 conflicts: 8 shift/reduce
State 63 conflicts: 8 shift/reduce
State 64 conflicts: 8 shift/reduce
State 65 conflicts: 8 shift/reduce
State 66 conflicts: 8 shift/reduce
State 67 conflicts: 8 shift/reduce
State 68 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls

    2 decls: decls decl
    3      | /* empty */

    4 decl: INT IDENTIFIER SEMICOLON
    5     | INT IDENTIFIER ASSIGN expr SEMICOLON
    6     | FLOAT IDENTIFIER SEMICOLON
    7     | FLOAT IDENTIFIER ASSIGN expr SEMICOLON
    8     | DOUBLE IDENTIFIER SEMICOLON
    9     | DOUBLE IDENTIFIER ASSIGN expr SEMICOLON
   10     | stmt

   11 boolean_literal: TRUE
   12                | FALSE

   13 stmt: IDENTIFIER ASSIGN expr SEMICOLON
   14     | IDENTIFIER ASSIGN expr
   15     | RETURN expr SEMICOLON
   16     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE
   18     | WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE
   19     | FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE
   20     | IDENTIFIER PLUSPLUS SEMICOLON
   21     | IDENTIFIER PLUSPLUS
   22     | IDENTIFIER MINUSMINUS SEMICOLON
   23     | IDENTIFIER MINUSMINUS
   24     | error SEMICOLON

   25 stmt_list: stmt
   26          | stmt_list stmt

   27 expr: expr PLUS expr
   28     | expr MINUS expr
   29     | expr TIMES expr
   30     | expr DIVIDE expr
   31     | expr LT expr
   32     | expr GT expr
   33     | expr LE expr
   34     | expr GE expr
   35     | boolean_literal
   36     | IDENTIFIER
   37     | NUMBER
   38     | FLOAT_NUMBER
   39     | DOUBLE_NUMBER
   40     | LPAREN expr RPAREN
   41     | error


Terminals, with rules where they appear

$end (0) 0
error (256) 24 41
INT (258) 4 5
FLOAT (259) 6 7
DOUBLE (260) 8 9
RETURN (261) 15
TRUE (262) 11
FALSE (263) 12
IF (264) 16 17
ELSE (265) 16
WHILE (266) 18
FOR (267) 19
PLUS (268) 27
MINUS (269) 28
TIMES (270) 29
DIVIDE (271) 30
ASSIGN (272) 5 7 9 13 14
SEMICOLON (273) 4 5 6 7 8 9 13 15 19 20 22 24
PLUSPLUS (274) 20 21
MINUSMINUS (275) 22 23
LPAREN (276) 16 17 18 19 40
RPAREN (277) 16 17 18 19 40
LBRACE (278) 16 17 18 19
RBRACE (279) 16 17 18 19
LT (280) 31
GT (281) 32
LE (282) 33
GE (283) 34
IDENTIFIER (284) 4 5 6 7 8 9 13 14 20 21 22 23 36
NUMBER (285) 37
FLOAT_NUMBER (286) 38
DOUBLE_NUMBER (287) 39


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
decls (35)
    on left: 2 3, on right: 1 2
decl (36)
    on left: 4 5 6 7 8 9 10, on right: 2
boolean_literal (37)
    on left: 11 12, on right: 35
stmt (38)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24, on right: 10 19 25
    26
stmt_list (39)
    on left: 25 26, on right: 16 17 18 19 26
expr (40)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    5 7 9 13 14 15 16 17 18 19 27 28 29 30 31 32 33 34 40


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (decls)

    program  go to state 1
    decls    go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: decls .
    2 decls: decls . decl

    error       shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    DOUBLE      shift, and go to state 7
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    $end  reduce using rule 1 (program)

    decl  go to state 13
    stmt  go to state 14


state 3

    0 $accept: program $end .

    $default  accept


state 4

   24 stmt: error . SEMICOLON

    SEMICOLON  shift, and go to state 15


state 5

    4 decl: INT . IDENTIFIER SEMICOLON
    5     | INT . IDENTIFIER ASSIGN expr SEMICOLON

    IDENTIFIER  shift, and go to state 16


state 6

    6 decl: FLOAT . IDENTIFIER SEMICOLON
    7     | FLOAT . IDENTIFIER ASSIGN expr SEMICOLON

    IDENTIFIER  shift, and go to state 17


state 7

    8 decl: DOUBLE . IDENTIFIER SEMICOLON
    9     | DOUBLE . IDENTIFIER ASSIGN expr SEMICOLON

    IDENTIFIER  shift, and go to state 18


state 8

   15 stmt: RETURN . expr SEMICOLON

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 28


state 9

   16 stmt: IF . LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF . LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 29


state 10

   18 stmt: WHILE . LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 30


state 11

   19 stmt: FOR . LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 31


state 12

   13 stmt: IDENTIFIER . ASSIGN expr SEMICOLON
   14     | IDENTIFIER . ASSIGN expr
   20     | IDENTIFIER . PLUSPLUS SEMICOLON
   21     | IDENTIFIER . PLUSPLUS
   22     | IDENTIFIER . MINUSMINUS SEMICOLON
   23     | IDENTIFIER . MINUSMINUS

    ASSIGN      shift, and go to state 32
    PLUSPLUS    shift, and go to state 33
    MINUSMINUS  shift, and go to state 34


state 13

    2 decls: decls decl .

    $default  reduce using rule 2 (decls)


state 14

   10 decl: stmt .

    $default  reduce using rule 10 (decl)


state 15

   24 stmt: error SEMICOLON .

    $default  reduce using rule 24 (stmt)


state 16

    4 decl: INT IDENTIFIER . SEMICOLON
    5     | INT IDENTIFIER . ASSIGN expr SEMICOLON

    ASSIGN     shift, and go to state 35
    SEMICOLON  shift, and go to state 36


state 17

    6 decl: FLOAT IDENTIFIER . SEMICOLON
    7     | FLOAT IDENTIFIER . ASSIGN expr SEMICOLON

    ASSIGN     shift, and go to state 37
    SEMICOLON  shift, and go to state 38


state 18

    8 decl: DOUBLE IDENTIFIER . SEMICOLON
    9     | DOUBLE IDENTIFIER . ASSIGN expr SEMICOLON

    ASSIGN     shift, and go to state 39
    SEMICOLON  shift, and go to state 40


state 19

   41 expr: error .

    $default  reduce using rule 41 (expr)


state 20

   11 boolean_literal: TRUE .

    $default  reduce using rule 11 (boolean_literal)


state 21

   12 boolean_literal: FALSE .

    $default  reduce using rule 12 (boolean_literal)


state 22

   40 expr: LPAREN . expr RPAREN

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 41


state 23

   36 expr: IDENTIFIER .

    $default  reduce using rule 36 (expr)


state 24

   37 expr: NUMBER .

    $default  reduce using rule 37 (expr)


state 25

   38 expr: FLOAT_NUMBER .

    $default  reduce using rule 38 (expr)


state 26

   39 expr: DOUBLE_NUMBER .

    $default  reduce using rule 39 (expr)


state 27

   35 expr: boolean_literal .

    $default  reduce using rule 35 (expr)


state 28

   15 stmt: RETURN expr . SEMICOLON
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    LT         shift, and go to state 47
    GT         shift, and go to state 48
    LE         shift, and go to state 49
    GE         shift, and go to state 50


state 29

   16 stmt: IF LPAREN . expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN . expr RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 51


state 30

   18 stmt: WHILE LPAREN . expr RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 52


state 31

   19 stmt: FOR LPAREN . stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    stmt  go to state 53


state 32

   13 stmt: IDENTIFIER ASSIGN . expr SEMICOLON
   14     | IDENTIFIER ASSIGN . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 54


state 33

   20 stmt: IDENTIFIER PLUSPLUS . SEMICOLON
   21     | IDENTIFIER PLUSPLUS .

    SEMICOLON  shift, and go to state 55

    $default  reduce using rule 21 (stmt)


state 34

   22 stmt: IDENTIFIER MINUSMINUS . SEMICOLON
   23     | IDENTIFIER MINUSMINUS .

    SEMICOLON  shift, and go to state 56

    $default  reduce using rule 23 (stmt)


state 35

    5 decl: INT IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 57


state 36

    4 decl: INT IDENTIFIER SEMICOLON .

    $default  reduce using rule 4 (decl)


state 37

    7 decl: FLOAT IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 58


state 38

    6 decl: FLOAT IDENTIFIER SEMICOLON .

    $default  reduce using rule 6 (decl)


state 39

    9 decl: DOUBLE IDENTIFIER ASSIGN . expr SEMICOLON

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 59


state 40

    8 decl: DOUBLE IDENTIFIER SEMICOLON .

    $default  reduce using rule 8 (decl)


state 41

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr
   40     | LPAREN expr . RPAREN

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    RPAREN  shift, and go to state 60
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50


state 42

   27 expr: expr PLUS . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 61


state 43

   28 expr: expr MINUS . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 62


state 44

   29 expr: expr TIMES . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 63


state 45

   30 expr: expr DIVIDE . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 64


state 46

   15 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 47

   31 expr: expr LT . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 65


state 48

   32 expr: expr GT . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 66


state 49

   33 expr: expr LE . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 67


state 50

   34 expr: expr GE . expr

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 68


state 51

   16 stmt: IF LPAREN expr . RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr . RPAREN LBRACE stmt_list RBRACE
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    RPAREN  shift, and go to state 69
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50


state 52

   18 stmt: WHILE LPAREN expr . RPAREN LBRACE stmt_list RBRACE
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    RPAREN  shift, and go to state 70
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50


state 53

   19 stmt: FOR LPAREN stmt . expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE

    error          shift, and go to state 19
    TRUE           shift, and go to state 20
    FALSE          shift, and go to state 21
    LPAREN         shift, and go to state 22
    IDENTIFIER     shift, and go to state 23
    NUMBER         shift, and go to state 24
    FLOAT_NUMBER   shift, and go to state 25
    DOUBLE_NUMBER  shift, and go to state 26

    boolean_literal  go to state 27
    expr             go to state 71


state 54

   13 stmt: IDENTIFIER ASSIGN expr . SEMICOLON
   14     | IDENTIFIER ASSIGN expr .
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    SEMICOLON  shift, and go to state 72
    LT         shift, and go to state 47
    GT         shift, and go to state 48
    LE         shift, and go to state 49
    GE         shift, and go to state 50

    $default  reduce using rule 14 (stmt)


state 55

   20 stmt: IDENTIFIER PLUSPLUS SEMICOLON .

    $default  reduce using rule 20 (stmt)


state 56

   22 stmt: IDENTIFIER MINUSMINUS SEMICOLON .

    $default  reduce using rule 22 (stmt)


state 57

    5 decl: INT IDENTIFIER ASSIGN expr . SEMICOLON
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    SEMICOLON  shift, and go to state 73
    LT         shift, and go to state 47
    GT         shift, and go to state 48
    LE         shift, and go to state 49
    GE         shift, and go to state 50


state 58

    7 decl: FLOAT IDENTIFIER ASSIGN expr . SEMICOLON
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    SEMICOLON  shift, and go to state 74
    LT         shift, and go to state 47
    GT         shift, and go to state 48
    LE         shift, and go to state 49
    GE         shift, and go to state 50


state 59

    9 decl: DOUBLE IDENTIFIER ASSIGN expr . SEMICOLON
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    SEMICOLON  shift, and go to state 75
    LT         shift, and go to state 47
    GT         shift, and go to state 48
    LE         shift, and go to state 49
    GE         shift, and go to state 50


state 60

   40 expr: LPAREN expr RPAREN .

    $default  reduce using rule 40 (expr)


state 61

   27 expr: expr . PLUS expr
   27     | expr PLUS expr .
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 27 (expr)]
    MINUS     [reduce using rule 27 (expr)]
    TIMES     [reduce using rule 27 (expr)]
    DIVIDE    [reduce using rule 27 (expr)]
    LT        [reduce using rule 27 (expr)]
    GT        [reduce using rule 27 (expr)]
    LE        [reduce using rule 27 (expr)]
    GE        [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


state 62

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   28     | expr MINUS expr .
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 28 (expr)]
    MINUS     [reduce using rule 28 (expr)]
    TIMES     [reduce using rule 28 (expr)]
    DIVIDE    [reduce using rule 28 (expr)]
    LT        [reduce using rule 28 (expr)]
    GT        [reduce using rule 28 (expr)]
    LE        [reduce using rule 28 (expr)]
    GE        [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


state 63

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   29     | expr TIMES expr .
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 29 (expr)]
    MINUS     [reduce using rule 29 (expr)]
    TIMES     [reduce using rule 29 (expr)]
    DIVIDE    [reduce using rule 29 (expr)]
    LT        [reduce using rule 29 (expr)]
    GT        [reduce using rule 29 (expr)]
    LE        [reduce using rule 29 (expr)]
    GE        [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


state 64

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   30     | expr DIVIDE expr .
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 30 (expr)]
    MINUS     [reduce using rule 30 (expr)]
    TIMES     [reduce using rule 30 (expr)]
    DIVIDE    [reduce using rule 30 (expr)]
    LT        [reduce using rule 30 (expr)]
    GT        [reduce using rule 30 (expr)]
    LE        [reduce using rule 30 (expr)]
    GE        [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


state 65

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   31     | expr LT expr .
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 31 (expr)]
    MINUS     [reduce using rule 31 (expr)]
    TIMES     [reduce using rule 31 (expr)]
    DIVIDE    [reduce using rule 31 (expr)]
    LT        [reduce using rule 31 (expr)]
    GT        [reduce using rule 31 (expr)]
    LE        [reduce using rule 31 (expr)]
    GE        [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


state 66

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   32     | expr GT expr .
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 32 (expr)]
    MINUS     [reduce using rule 32 (expr)]
    TIMES     [reduce using rule 32 (expr)]
    DIVIDE    [reduce using rule 32 (expr)]
    LT        [reduce using rule 32 (expr)]
    GT        [reduce using rule 32 (expr)]
    LE        [reduce using rule 32 (expr)]
    GE        [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


state 67

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   33     | expr LE expr .
   34     | expr . GE expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 33 (expr)]
    MINUS     [reduce using rule 33 (expr)]
    TIMES     [reduce using rule 33 (expr)]
    DIVIDE    [reduce using rule 33 (expr)]
    LT        [reduce using rule 33 (expr)]
    GT        [reduce using rule 33 (expr)]
    LE        [reduce using rule 33 (expr)]
    GE        [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


state 68

   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr
   34     | expr GE expr .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    LT      shift, and go to state 47
    GT      shift, and go to state 48
    LE      shift, and go to state 49
    GE      shift, and go to state 50

    PLUS      [reduce using rule 34 (expr)]
    MINUS     [reduce using rule 34 (expr)]
    TIMES     [reduce using rule 34 (expr)]
    DIVIDE    [reduce using rule 34 (expr)]
    LT        [reduce using rule 34 (expr)]
    GT        [reduce using rule 34 (expr)]
    LE        [reduce using rule 34 (expr)]
    GE        [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


state 69

   16 stmt: IF LPAREN expr RPAREN . LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 76


state 70

   18 stmt: WHILE LPAREN expr RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 77


state 71

   19 stmt: FOR LPAREN stmt expr . SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE
   27 expr: expr . PLUS expr
   28     | expr . MINUS expr
   29     | expr . TIMES expr
   30     | expr . DIVIDE expr
   31     | expr . LT expr
   32     | expr . GT expr
   33     | expr . LE expr
   34     | expr . GE expr

    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    SEMICOLON  shift, and go to state 78
    LT         shift, and go to state 47
    GT         shift, and go to state 48
    LE         shift, and go to state 49
    GE         shift, and go to state 50


state 72

   13 stmt: IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 13 (stmt)


state 73

    5 decl: INT IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 5 (decl)


state 74

    7 decl: FLOAT IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 7 (decl)


state 75

    9 decl: DOUBLE IDENTIFIER ASSIGN expr SEMICOLON .

    $default  reduce using rule 9 (decl)


state 76

   16 stmt: IF LPAREN expr RPAREN LBRACE . stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    stmt       go to state 79
    stmt_list  go to state 80


state 77

   18 stmt: WHILE LPAREN expr RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    stmt       go to state 79
    stmt_list  go to state 81


state 78

   19 stmt: FOR LPAREN stmt expr SEMICOLON . stmt RPAREN LBRACE stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    stmt  go to state 82


state 79

   25 stmt_list: stmt .

    $default  reduce using rule 25 (stmt_list)


state 80

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list . RBRACE ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE stmt_list . RBRACE
   26 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 83
    IDENTIFIER  shift, and go to state 12

    stmt  go to state 84


state 81

   18 stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list . RBRACE
   26 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 85
    IDENTIFIER  shift, and go to state 12

    stmt  go to state 84


state 82

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt . RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 86


state 83

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE . ELSE LBRACE stmt_list RBRACE
   17     | IF LPAREN expr RPAREN LBRACE stmt_list RBRACE .

    ELSE  shift, and go to state 87

    $default  reduce using rule 17 (stmt)


state 84

   26 stmt_list: stmt_list stmt .

    $default  reduce using rule 26 (stmt_list)


state 85

   18 stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 18 (stmt)


state 86

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 88


state 87

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE . LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 89


state 88

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    stmt       go to state 79
    stmt_list  go to state 90


state 89

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE . stmt_list RBRACE

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    stmt       go to state 79
    stmt_list  go to state 91


state 90

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list . RBRACE
   26 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 92
    IDENTIFIER  shift, and go to state 12

    stmt  go to state 84


state 91

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list . RBRACE
   26 stmt_list: stmt_list . stmt

    error       shift, and go to state 4
    RETURN      shift, and go to state 8
    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    FOR         shift, and go to state 11
    RBRACE      shift, and go to state 93
    IDENTIFIER  shift, and go to state 12

    stmt  go to state 84


state 92

   19 stmt: FOR LPAREN stmt expr SEMICOLON stmt RPAREN LBRACE stmt_list RBRACE .

    $default  reduce using rule 19 (stmt)


state 93

   16 stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .

    $default  reduce using rule 16 (stmt)
